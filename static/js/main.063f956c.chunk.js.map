{"version":3,"sources":["redux/actionTypes.js","redux/actions.js","components/AddTodo.js","selectors.js","components/TodoItem.js","components/Todo.js","components/VisibilityFilters.js","App.js","redux/reducers/filters.js","redux/reducers/todos.js","redux/reducers/index.js","redux/store.js","serviceWorker.js","index.js"],"names":["ADD_TODO","DELETE_TODO","TOGGLE_TODO","EDIT_TODO","CLEAR_ALL","FILTER_ALL","FILTER_DONE","FILTER_UNDONE","deleteTodo","id","type","payload","toggleTodo","filterAll","filter","AddTodo","useState","value","setValue","dispatch","useDispatch","handleButtonClick","length","alert","content","d","justify","placeholder","onChange","e","target","onKeyDown","key","h","w","bg","hoverBg","rounded","m","l","onClick","name","size","selectTodos","store","todoState","todos","selectFilters","filterState","TodoItemWrapper","styled","div","TodoContent","props","$isDone","TodoItem","todo","inputValue","setInputValue","inputToggle","setInputToggle","handleUpdateClick","isDone","r","shadow","hoverShadow","color","Todo","useSelector","filters","handleToggleIsDone","handleDeleteTodo","handleEditClick","all","done","undone","map","p","border","b","DisplayButton","button","$active","action","VisibilityFilters","display","setDisplay","x","textSize","textColor","hoverTextColor","t","Wrapper","Title","h1","App","initialState","todoId","combineReducers","state","createStore","rootReducer","Boolean","window","location","hostname","match","engine","Styletron","ReactDOM","render","debug","debugAfterHydration","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.063f956c.chunk.js","sourcesContent":["export const ADD_TODO = \"add_todo\";\nexport const DELETE_TODO = \"delete_todo\";\nexport const TOGGLE_TODO = \"toggle_todo\";\nexport const EDIT_TODO = \"edit_todo\";\nexport const CLEAR_ALL = \"clear_all\";\nexport const FILTER_ALL = \"filter_all\";\nexport const FILTER_DONE = \"filter_done\";\nexport const FILTER_UNDONE = \"filter_undone\";\n","import {\n  ADD_TODO,\n  DELETE_TODO,\n  TOGGLE_TODO,\n  EDIT_TODO,\n  CLEAR_ALL,\n  FILTER_ALL,\n  FILTER_DONE,\n  FILTER_UNDONE,\n} from \"./actionTypes\";\n\nexport const addTodo = (content) => ({\n  type: ADD_TODO,\n  payload: {\n    content,\n  },\n});\n\nexport const deleteTodo = (id) => ({\n  type: DELETE_TODO,\n  payload: { id },\n});\n\nexport const toggleTodo = (id) => ({\n  type: TOGGLE_TODO,\n  payload: { id },\n});\n\nexport const editTodo = (id, content) => ({\n  type: EDIT_TODO,\n  payload: { id, content },\n});\n\nexport const clearAll = (id) => ({\n  type: CLEAR_ALL,\n  payload: { id },\n});\n\nexport function filterAll() {\n  return {\n    type: FILTER_ALL,\n    payload: {\n      filter: \"all\",\n    },\n  };\n}\n\nexport function filterDone() {\n  return {\n    type: FILTER_DONE,\n    payload: {\n      filter: \"done\",\n    },\n  };\n}\n\nexport function filterUndone() {\n  return {\n    type: FILTER_UNDONE,\n    payload: {\n      filter: \"undone\",\n    },\n  };\n}\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addTodo } from \"../redux/actions\";\nimport { Div, Input, Button, Icon } from \"atomize\";\n\nexport default function AddTodo() {\n  const [value, setValue] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const handleInputChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === \"Enter\") {\n      handleButtonClick();\n    }\n  };\n\n  const handleButtonClick = () => {\n    if (value === \"\" || value.length > 20)\n      return alert(\"請勿為空、文字請控制在 20 字元內\");\n    dispatch(addTodo(value));\n    setValue(\"\");\n  };\n\n  return (\n    <Div d=\"flex\" justify=\"center\">\n      <Input\n        placeholder=\"新增 Todo～\"\n        type=\"text\"\n        value={value}\n        onChange={handleInputChange}\n        onKeyDown={handleKeyDown}\n      />\n      <Button\n        h=\"2.5rem\"\n        w=\"2.5rem\"\n        bg=\"white\"\n        hoverBg=\"danger400\"\n        rounded=\"lg\"\n        m={{ l: \"1rem\" }}\n        onClick={handleButtonClick}\n      >\n        <Icon name=\"LongRight\" size=\"20px\" />\n      </Button>\n    </Div>\n  );\n}\n","export const selectTodos = (store) => store.todoState.todos;\nexport const selectFilters = (store) => store.filterState.filter;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { toggleTodo, deleteTodo, editTodo } from \"../redux/actions\";\nimport { useDispatch } from \"react-redux\";\nimport { Div, Icon, Button, Input } from \"atomize\";\n\nconst TodoItemWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 12px 16px;\n  border-bottom: 1px solid #adadad;\n`;\n\nconst TodoContent = styled.div`\n  color: #00bfff;\n  ${(props) =>\n    props.$isDone &&\n    `\n    text-decoration: line-through;\n    color: #808080;\n  `}\n`;\n\nexport default function TodoItem({ todo }) {\n  const [inputValue, setInputValue] = useState(todo.content);\n  const [inputToggle, setInputToggle] = useState(true);\n  const dispatch = useDispatch();\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === \"Enter\") {\n      handleUpdateClick();\n    }\n  };\n\n  const handleUpdateClick = () => {\n    if (inputValue === \"\" || inputValue.length > 20)\n      return alert(\"請勿為空、文字請控制在 20 字元內\");\n    dispatch(editTodo(todo.id, inputValue));\n    setInputToggle(true);\n  };\n\n  const handleToggleIsDone = () => {\n    dispatch(toggleTodo(todo.id));\n  };\n\n  const handleDeleteTodo = () => {\n    dispatch(deleteTodo(todo.id));\n  };\n\n  const handleEditClick = () => {\n    setInputToggle(false);\n  };\n\n  return (\n    <TodoItemWrapper>\n      <Div onClick={handleToggleIsDone}>\n        {todo.isDone ? (\n          <Icon name=\"Checked\" size=\"20px\" />\n        ) : (\n          <Icon name=\"RBUnchecked\" size=\"20px\" />\n        )}\n      </Div>\n      {inputToggle ? (\n        <TodoContent $isDone={todo.isDone}>{todo.content}</TodoContent>\n      ) : (\n        <Input\n          placeholder=\"編輯Todo\"\n          h=\"2rem\"\n          value={inputValue}\n          onChange={handleInputChange}\n          onKeyDown={handleKeyDown}\n        />\n      )}\n      <Div d=\"flex\">\n        {inputToggle ? (\n          <Button\n            h=\"2rem\"\n            w=\"2rem\"\n            bg=\"success300\"\n            hoverBg=\"success400\"\n            rounded=\"lg\"\n            m={{ r: \"1rem\" }}\n            onClick={handleEditClick}\n          >\n            <Icon name=\"Edit\" size=\"20px\" />\n          </Button>\n        ) : (\n          <Button\n            h=\"2rem\"\n            w=\"2rem\"\n            bg=\"success300\"\n            hoverBg=\"success400\"\n            rounded=\"lg\"\n            m={{ r: \"1rem\" }}\n            onClick={handleUpdateClick}\n          >\n            <Icon name=\"EditSolid\" size=\"20px\" />\n          </Button>\n        )}\n        <Button\n          h=\"2rem\"\n          w=\"2rem\"\n          bg=\"danger700\"\n          hoverBg=\"danger600\"\n          rounded=\"circle\"\n          m={{ r: \"1rem\" }}\n          shadow=\"2\"\n          hoverShadow=\"4\"\n          onClick={handleDeleteTodo}\n        >\n          <Icon name=\"DeleteSolid\" size=\"20px\" color=\"white\" />\n        </Button>\n      </Div>\n    </TodoItemWrapper>\n  );\n}\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { deleteTodo, toggleTodo } from \"../redux/actions\";\r\nimport { selectTodos, selectFilters } from \"../selectors\";\r\nimport TodoItem from \"./TodoItem\";\r\nimport { Div } from \"atomize\";\r\n\r\nexport default function Todo() {\r\n  const todos = useSelector(selectTodos);\r\n  const filters = useSelector(selectFilters);\r\n  const dispatch = useDispatch();\r\n  const [inputToggle, setInputToggle] = useState(true);\r\n\r\n  const handleToggleIsDone = (id) => {\r\n    dispatch(toggleTodo(id));\r\n  };\r\n\r\n  const handleDeleteTodo = (id) => {\r\n    dispatch(deleteTodo(id));\r\n  };\r\n\r\n  const handleEditClick = () => {\r\n    setInputToggle(false);\r\n  };\r\n\r\n  const DISPLAY_MAP = {\r\n    all: (todos) => todos,\r\n    done: (todos) => todos.isDone,\r\n    undone: (todos) => !todos.isDone,\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {todos && todos.length ? \r\n      (todos.filter(DISPLAY_MAP[filters]).map((todo) => (\r\n        <TodoItem\r\n          key={todo.id}\r\n          todo={todo}\r\n          content={todo.content}\r\n          handleToggleIsDone={handleToggleIsDone}\r\n          handleEditClick={handleEditClick}\r\n          handleDeleteTodo={handleDeleteTodo}\r\n        />\r\n      ))) : <Div d=\"flex\" justify=\"center\" p=\"2rem\" border={{b: \"1px solid\"}}>Write a TO-DO list!</Div>}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport {\n  clearAll,\n  filterAll,\n  filterDone,\n  filterUndone,\n} from \"../redux/actions\";\nimport { Div, Icon, Button} from \"atomize\";\n\nconst DisplayButton = styled.button`\n  padding: 10px;\n  border: none;\n  cursor: pointer;\n  background: white;\n\n  &:hover {\n    color: red;\n  }\n  & + & {\n    margin-left: 8px;\n  }\n  ${(props) =>\n    props.$active &&\n    `\n    height: 100%;\n    border-left: 1px solid #adadad;\n    border-right: 1px solid #adadad;\n    background: #ffd9e6;\n    transition: all 0.4s ease-in;\n    color: #adadad;\n    font-wieght: bold;\n  `}\n`;\n\nconst filters = [\n  { name: \"全部\", action: filterAll() },\n  { name: \"已完成\", action: filterDone() },\n  { name: \"未完成\", action: filterUndone() },\n];\n\nconst VisibilityFilters = () => {\n  const dispatch = useDispatch();\n  const [display, setDisplay] = useState(filters[0].name);\n\n  const handleClearAll = () => {\n    dispatch(clearAll());\n    dispatch(filterAll());\n    setDisplay(filters[0].name);\n  };\n\n  return (\n    <Div d=\"flex\" justify=\"center\" h=\"3rem\">\n      <div>\n        {filters.map((filter) => (\n          <DisplayButton\n            $active={display===filter.name}\n            key={filter.name}\n            onClick={() => {\n              dispatch(filter.action);\n              setDisplay(filter.name);\n            }}\n            display={filter.name}\n          >\n            {filter.name}\n          </DisplayButton>\n        ))}\n      </div>\n      <Button\n        h=\"2.5rem\"\n        p={{ x: \"1rem\" }}\n        textSize=\"body\"\n        textColor=\"warning700\"\n        hoverTextColor=\"danger700\"\n        bg=\"white\"\n        m={{ l: \"3rem\", t: \"0.1rem\" }}\n        onClick={handleClearAll}\n      >\n        <Icon name=\"Alert\" size=\"20px\" />\n        清空\n      </Button>\n    </Div>\n  );\n};\n\nexport default VisibilityFilters;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport AddTodo from \"./components/AddTodo\";\nimport Todo from \"./components/Todo\";\nimport VisibilityFilters from \"./components/VisibilityFilters\";\n\nconst Wrapper = styled.div`\n  width: 500px;\n  margin: 0 auto;\n  border: 1px solid #808080;\n  border-radius: 8px;\n  box-shadow: 2px 2px 2px 1px rgba(0, 0, 0, 0.2);\n`;\n\nconst Title = styled.h1`\n  display: flex;\n  color: #2894ff;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default function App() {\n  return (\n    <Wrapper>\n      <Title>Todo List</Title>\n      <AddTodo />\n      <Todo />\n      <VisibilityFilters />\n    </Wrapper>\n  );\n}\n","import { FILTER_ALL, FILTER_DONE, FILTER_UNDONE } from \"../actionTypes\";\n\nconst initialState = {\n  filter: \"all\",\n};\n\nexport default function filterReducer(state = initialState, action) {\n  switch (action.type) {\n    case FILTER_ALL: {\n      return {\n        ...state,\n        filter: action.payload.filter,\n      };\n    }\n\n    case FILTER_DONE: {\n      return {\n        ...state,\n        filter: action.payload.filter,\n      };\n    }\n\n    case FILTER_UNDONE: {\n      return {\n        ...state,\n        filter: action.payload.filter,\n      };\n    }\n\n    default: {\n      return {\n        ...state,\n      };\n    }\n  }\n}\n","import {\n  ADD_TODO,\n  DELETE_TODO,\n  TOGGLE_TODO,\n  EDIT_TODO,\n  CLEAR_ALL,\n} from \"../actionTypes\";\n\nlet todoId = 0;\nconst initialState = {\n  todos: [],\n};\n\nexport default function todosReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_TODO: {\n      return {\n        ...state,\n        todos: [\n          ...state.todos,\n          {\n            id: todoId++,\n            content: action.payload.content,\n            isDone: false,\n          },\n        ],\n      };\n    }\n    case DELETE_TODO: {\n      return {\n        ...state,\n        todos: state.todos.filter((todo) => todo.id !== action.payload.id),\n      };\n    }\n    case TOGGLE_TODO: {\n      const { id } = action.payload;\n      return {\n        ...state,\n        todos: state.todos.map((todo) => {\n          if (id !== todo.id) return todo;\n          return {\n            ...todo,\n            isDone: !todo.isDone,\n          };\n        }),\n      };\n    }\n    case EDIT_TODO: {\n      return {\n        ...state,\n        todos: state.todos.map((todo) => {\n          if (todo.id !== action.payload.id) return todo;\n          return {\n            ...todo,\n            content: action.payload.content,\n          };\n        }),\n      };\n    }\n    case CLEAR_ALL: {\n      return {\n        ...state,\n        todos: [],\n      };\n    }\n    default: {\n      return {\n        ...state,\n      };\n    }\n  }\n}\n","import { combineReducers } from \"redux\";\nimport filters from \"./filters\";\nimport todos from \"./todos\";\n\nexport default combineReducers({ todoState: todos, filterState: filters });\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nexport default createStore(rootReducer);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider as StyletronProvider, DebugEngine } from \"styletron-react\";\nimport { Client as Styletron } from \"styletron-engine-atomic\";\n\nconst debug =\n  process.env.NODE_ENV === \"production\" ? void 0 : new DebugEngine();\n\nconst engine = new Styletron();\n\nReactDOM.render(\n  <StyletronProvider value={engine} debug={debug} debugAfterHydration>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </StyletronProvider>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}